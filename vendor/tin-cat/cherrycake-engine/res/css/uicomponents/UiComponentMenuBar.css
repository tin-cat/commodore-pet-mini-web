body.withUiComponentMenuBar {
    padding-top: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
}

#UiComponentMenuBar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    display: flex;
    justify-content: center;
    align-items: center;
}

#UiComponentMenuBar.light {
    background: rgba(255, 255, 255, .95);
    border-bottom: solid #000 1px;
}

#UiComponentMenuBar.dark {
    background: rgba(0, 0, 0, .95);
    border-bottom: solid #fff 1px;
}

#UiComponentMenuBar .buttonSmallScreenMenu {
    position: absolute;
    right: 0;
    top: 0;
    width: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    height: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    visibility: hidden;
}

#UiComponentMenuBar > .wrapper {
    display: flex;
    justify-content: center;
    width: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("width")?>px;
}

#UiComponentMenuBar.withLogo > .wrapper {
    justify-content: space-between;
}

#UiComponentMenuBar > .wrapper > .logo {
    height: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    margin: 0 10px;
}

#UiComponentMenuBar > .wrapper > .logo.text {
    line-height: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    font-weight: bold;
    text-decoration: none;
}

#UiComponentMenuBar.light > .wrapper > .logo.text {
    color: #000;
}

#UiComponentMenuBar.dark > .wrapper > .logo.text {
    color: #fff;
}

#UiComponentMenuBar > .wrapper > .logo > img {
    height: calc(<?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px - 14px);
    margin: 7px 0;
}

#UiComponentMenuBar > .wrapper > .options {
    display: flex;
    justify-content: center;
    align-items: center;
    height: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
}

#UiComponentMenuBar > .wrapper > .options > .option {
    height: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    line-height: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    padding: 0 20px;
    text-decoration: none;
}

#UiComponentMenuBar.light > .wrapper > .options > .option { color: #000; }
#UiComponentMenuBar.dark > .wrapper > .options > .option { color: #fff; }

#UiComponentMenuBar > .wrapper > .options > .option.selected {
    font-weight: bold;
}

#UiComponentMenuBar > .wrapper > .logo + .options {
    margin-left: 20px;
}

#UiComponentMenuBar > .smallScreenMenu {
    position: fixed;
    top: <?=$e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("height")?>px;
    right: 0;
    left: 100vw;
    bottom: 0;
    background: #000;
    transition: all 0.2s ease-out;
    overflow-y: auto;
    padding: 10px 0;
    z-index: 1000;
}

#UiComponentMenuBar > .smallScreenMenu > .option {
    display: block;
    color: #fff;
    padding: 10px 20px;
    text-decoration: none;
}

<?= $e->Css->mediaQuery([
	"maxWidth" => $e->Ui->uiComponents["UiComponentMenuBar"]->getConfig("responsiveBreakpoints")["thresholdWidthToUseSlidingPanel"],
    "css" => "
        #UiComponentMenuBar > .buttonSmallScreenMenu.open { visibility: visible; }
        #UiComponentMenuBar > .buttonSmallScreenMenu.close { visibility: hidden; }

        #UiComponentMenuBar.smallScreenMenuOpen > .buttonSmallScreenMenu.open { visibility: hidden; }
        #UiComponentMenuBar.smallScreenMenuOpen > .buttonSmallScreenMenu.close { visibility: visible; }

        #UiComponentMenuBar.smallScreenMenuOpen > .smallScreenMenu {
            left: 0;
        }

        #UiComponentMenuBar > .wrapper > .options {
            display: none;
        }
    "])
?>