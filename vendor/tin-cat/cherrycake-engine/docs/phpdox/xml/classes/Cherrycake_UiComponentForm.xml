<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cherrycake\UiComponentForm" namespace="Cherrycake" name="UiComponentForm" abstract="false" final="false" start="19" end="133">
  <file path="/var/www/lib/cherrycake/modules/Ui" file="UiComponentForm.class.php" realpath="/var/www/lib/cherrycake/modules/Ui/UiComponentForm.class.php" size="4237" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="c00d01110199a8720ad488c9ae468987659de623" relative="modules/Ui/UiComponentForm.class.php"/>
  <docblock>
    <description compact="UiComponentForm">A Ui component to create forms</description>
    <package value="Cherrycake"/>
    <category value="Classes"/>
  </docblock>
  <extends full="Cherrycake\UiComponent" namespace="Cherrycake" name="UiComponent"/>
  <member name="style" visibility="protected" static="false" line="20"/>
  <member name="request" visibility="protected" static="false" line="21"/>
  <member name="method" type="string" default="&quot;post&quot;" visibility="protected" static="false" line="22"/>
  <member name="url" visibility="protected" static="false" line="23"/>
  <member name="domId" visibility="protected" static="false" line="24"/>
  <member name="items" visibility="protected" static="false" line="25"/>
  <member name="dependentCherrycakeUiComponents" type="array" default="" visibility="protected" static="false" line="30">
    <docblock>
      <description/>
      <var description="$dependentCherrycakeUiComponents Cherrycake UiComponent names that are required by this module" type="array"/>
    </docblock>
  </member>
  <method name="addCssAndJavascript" start="39" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="AddCssAndJavascriptSetsToHtmlDocument">Adds the Css and Javascript sets that are required to load by HtmlDocument module for this UI component to properly work</description>
    </docblock>
  </method>
  <method name="buildHtml" start="61" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Builds a complex form with the given items.">Setup keys:

* style: The additional style for the form
* request: An optional Request object. If specified, the created form will be submitted according to the Request, and will take into account any security additional measures that need to be taken when creating forms that lead to requests, like CSRF attacks mitigation.
* method: &lt;post|get&gt; Default: post (Optional. If not specified, a regular div will be used instead of a form)
* url: The URL to post this form to (Optional. If not specified, a regular div will be used instead of a form)
* domId: The Dom id for the form element
* items: An array of: UiComponentForm* objects or arrays of UiComponentForm* objects if you want to visually group them in a UiComponentGrid. If a request is specified, each UiComponentForm*'s name must ideally match one of the request parameters.</description>
      <param description="A hash array with the specs" type="array" variable="$setup"/>
      <return description="The Html" type="string"/>
    </docblock>
    <parameter name="setup" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="If a Request has been specified, set the proper url and parameters" line="69"/>
    </inline>
  </method>
  <method name="buildHtmlForUiComponentFormItem" start="114" end="132" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Build the HTML code of the specified UiComponentformItem for the form"/>
      <param description="One of the available UiComponentFormItem* object" type="object" variable="$UiComponentFormItem">
        <type full="Cherrycake\UiComponentFormItem" namespace="Cherrycake" name="UiComponentFormItem"/>
      </param>
      <return description="The HTML" type="string"/>
    </docblock>
    <parameter name="UiComponentFormItem" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Consider the user of a UiComponentGrid" line="115"/>
    </inline>
  </method>
  <parent full="Cherrycake\UiComponent" namespace="Cherrycake" name="UiComponent">
    <extends full="Cherrycake\BasicObject" namespace="Cherrycake" name="BasicObject"/>
    <member name="dependentCherrycakeUiComponents" visibility="protected" static="false" line="23">
      <docblock>
        <description/>
        <var description="$dependentCherrycakeUiComponents Cherrycake UiComponent names that are required by this module" type="array"/>
      </docblock>
    </member>
    <member name="dependentAppUiComponents" visibility="protected" static="false" line="28">
      <docblock>
        <description/>
        <var description="$dependentAppUiComponents App UiComponent names that are required by this module" type="array"/>
      </docblock>
    </member>
    <member name="isConfigFile" type="boolean" default="false" visibility="protected" static="false" line="33">
      <docblock>
        <description/>
        <var description="$isConfig Sets whether this UiComponent has its own configuration file. Defaults to false." type="object">
          <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
        </var>
      </docblock>
    </member>
    <member name="config" visibility="protected" static="false" line="38">
      <docblock>
        <description/>
        <var description="$config Holds the default configuration for this UiComponent" type="array"/>
      </docblock>
    </member>
    <method name="loadConfigFile" start="45" end="52" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadConfigFile">Loads the configuration file for this UiComponent, if there's one</description>
      </docblock>
    </method>
    <method name="config" start="61" end="69" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="config">Sets the ui component configuration</description>
        <param description="An array of configuration options for this ui component. It merges them with the hard coded default values configured in the overloaded ui component class." type="array" variable="$config"/>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
    <method name="init" start="80" end="96" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="init">Initializes the UiComponent, intended to be overloaded.
Called when the UiComponent is loaded.
Contains any specific initializations for the UiComponent, and any required loading of dependencies.</description>
        <return description="Whether the UiComponent has been loaded ok" type="boolean"/>
      </docblock>
      <inline>
        <comment value="Default configuration" line="86"/>
      </inline>
    </method>
    <method name="loadDependencies" start="105" end="121" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadDependencies">Loads the dependent UiComponents required by this one</description>
        <return description="Whether the dependent UiComponents are loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="getConfig" start="130" end="133" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getConfig">Gets a configuration value</description>
        <param description="The configuration key" type="string" variable="$key"/>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
    </method>
    <method name="AddCssAndJavascriptSetsToHtmlDocument" start="140" end="150" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="AddCssAndJavascriptSetsToHtmlDocument">Adds the Css and Javascript sets that are required to load by HtmlDocument module for this UI component to properly work</description>
      </docblock>
    </method>
    <method name="addCssAndJavascript" start="158" end="172" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="addCssAndJavascript">Adds the required Css/Javascript files/code for this Ui component. Intended to be overloaded by an specific UiComponent class, which has to call first parent::addCssAndJavascript in order to retain UiComponent modules dependencies, and load Javascript/Css in the intended order
Called when the Css is dumped</description>
      </docblock>
    </method>
    <method name="__toString" start="174" end="176" abstract="false" final="false" static="false" visibility="public"/>
  </parent>
  <parent full="Cherrycake\BasicObject" namespace="Cherrycake" name="BasicObject">
    <method name="build" start="22" end="25" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Creates an object and returns it"/>
        <param description="A hash array with the select specs" type="array" variable="$setup"/>
        <return description="The object" type="object">
          <type full="Cherrycake\BasicObject" namespace="Cherrycake" name="BasicObject"/>
        </return>
      </docblock>
      <parameter name="properties" byreference="false" type="boolean" default="false"/>
    </method>
    <constructor name="__construct" start="30" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param description="A hash array with the setup keys" type="array" variable="$properties"/>
      </docblock>
      <parameter name="properties" byreference="false" type="boolean" default="false"/>
    </constructor>
    <method name="setProperties" start="39" end="45" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Bulk sets the given properties for this object"/>
        <param description="A hash array of properties" type="array" variable="$properties"/>
        <param description="Whether to overwrite properties if already set" type="boolean" variable="$isOverwrite"/>
      </docblock>
      <parameter name="properties" byreference="false" type="{unknown}"/>
      <parameter name="isOverwrite" byreference="false" type="boolean" default="true"/>
    </method>
    <method name="treatParameters" start="52" end="84" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Provides a system to pass complex parameters to a method, where parameters are passed in a hash array instead of the usual parameters passing method. A method using this system should accept a hash array of parameters and pass them as the first parameter to this method via a parent::treatParameters call, specifying as a second parameter a setup hash array of options for each parameter to be treated in a special way."/>
        <param description="&amp;$parameters The hash array of received parameters" type="array"/>
        <param description="A hash array of setup options on how to treat each passed parameter" type="array" variable="$setup"/>
      </docblock>
      <parameter name="parameters" byreference="true" type="{unknown}"/>
      <parameter name="setup" byreference="false" type="{unknown}"/>
    </method>
  </parent>
</class>
