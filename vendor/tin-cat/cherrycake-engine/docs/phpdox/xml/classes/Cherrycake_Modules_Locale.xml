<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cherrycake\Modules\Locale" namespace="Cherrycake\Modules" name="Locale" abstract="false" final="false" start="86" end="688">
  <file path="/var/www/lib/cherrycake/modules/Locale" file="Locale.class.php" realpath="/var/www/lib/cherrycake/modules/Locale/Locale.class.php" size="26638" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="1551912b22203e52a2f62034f4e27b5b17656672" relative="modules/Locale/Locale.class.php"/>
  <docblock>
    <description compact="Locale">Module that provides localization functionalities for a multilingual site: Database-based multilingual texts, currency and dates formatting, timezones and other locale settings

Configuration example for locale.config.php:
&lt;code&gt;
$localeConfig = [
	"availableLocales" =&gt; [ // An array of possible different localizations based on the domain requested
		"main" =&gt; [
			"domains" =&gt; ["movefy.devel.zumodered.com", "www.movefy.devel.zumodered.com"], // An array of domains that will trigger this localization
			"language" =&gt; LANGUAGE_ENGLISH, // The default language
			"dateFormat" =&gt; DATE_FORMAT_LITTLE_ENDIAN, // The default date format
			"temperatureUnits" =&gt; TEMPERATURE_UNITS_FAHRENHEIT, // The default temperature units
			"currency" =&gt; CURRENCY_USD, // The default currency
			"decimalMark" =&gt; DECIMAL_MARK_POINT,
			"measurementSystem" =&gt; MEASUREMENT_SYSTEM_IMPERIAL,
			"timeZone" =&gt; 216 // The default timezone id, from the cherrycake_location_timezones table (216 = "America/New_York")
		),
		"es" =&gt; [
			"domains" =&gt; ["es.movefy.devel.zumodered.com"],
			"language" =&gt; LANGUAGE_SPANISH,
			"dateFormat" =&gt; DATE_FORMAT_LITTLE_ENDIAN,
			"temperatureUnits" =&gt; TEMPERATURE_UNITS_CELSIUS,
			"currency" =&gt; CURRENCY_EURO,
			"decimalMark" =&gt; DECIMAL_MARK_POINT,
			"measurementSystem" =&gt; MEASUREMENT_SYSTEM_IMPERIAL,
			"timeZone" =&gt; 216 // The default timezone id, from the cherrycake_location_timezones table (216 = "America/New_York")
		),
		"defaultLocale" =&gt; "main", // The locale to use if none could have been guessed
		"canonicalLocale" =&gt; "main", // The locale to consider canonical, used i.e. in the HtmlDocument module to set the rel="canonical" meta tag, in order to let search engines understand that there are different pages in different languages that represent the same content.
		"availableLanguages" =&gt; [LANGUAGE_ENGLISH, LANGUAGE_SPANISH], // An array of the languages that are available for the APP. The textsTableName should contain at least this languages.
		"textsDatabaseProviderName" =&gt; "main", // The name of the database provider where the localized multilingual texts are found
		"textsTableName" =&gt; "cherrycake_locale_texts", // The name of the table where multilingual localized texts are stored
		"textCategoriesTableName" =&gt; "cherrycake_locale_textCategories", // The name of the table where text categories are stored
		"textCacheProviderName" =&gt; "fast", // The name of the cache provider that will be used to cache localized multilingual texts
		"textCacheKeyPrefix" =&gt; "LocaleText", // The prefix of the keys when storing texts into cache
		"textCacheDefaultTtl" =&gt; \Cherrycake\Modules\CACHE_TTL_NORMAL, // The default TTL for texts stored into cache
		"timeZonesDatabaseProviderName" =&gt; "main", // The name of the database provider where the timezones are found
		"timeZonesTableName" =&gt; "cherrycake_location_timezones", // The name of the table where the timezones are stored
		"timeZonesCacheProviderName" =&gt; "fast", // The name of the cache provider that will be user to cache timezones
		"timeZonesCacheKeyPrefix" =&gt; "LocaleTimeZone", // The prefix of the keys when storing timezones into cache
		"timeZonesCacheDefaultTtl" =&gt; \Cherrycake\Modules\CACHE_TTL_NORMAL // The default TTL for timezones stored into cache
	]
];
&lt;/code&gt;</description>
    <package value="Cherrycake"/>
    <category value="Modules"/>
  </docblock>
  <extends full="Cherrycake\Module" namespace="Cherrycake" name="Module"/>
  <member name="config" type="array" default="" visibility="public" static="false" line="91">
    <docblock>
      <description/>
      <var description="$config Default configuration options" type="array"/>
    </docblock>
  </member>
  <member name="dependentCherrycakeModules" type="array" default="" visibility="public" static="false" line="104">
    <docblock>
      <description/>
      <var description="$dependentCherrycakeModules Cherrycake module names that are required by this module" type="array"/>
    </docblock>
  </member>
  <member name="locale" visibility="public" static="false" line="114">
    <docblock>
      <description/>
      <var description="$locale The current locale settings" type="array"/>
    </docblock>
  </member>
  <member name="languageNames" type="array" default="" visibility="private" static="false" line="116"/>
  <member name="texts" type="array" default="" visibility="private" static="false" line="127"/>
  <method name="init" start="191" end="211" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="init">Initializes the module. Detects and assigns the locale depending on the requested domain.</description>
      <return description="Whether the module has been initted ok" type="boolean"/>
    </docblock>
  </method>
  <method name="getLanguageName" start="220" end="224" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Gets a language's name"/>
      <param description="The language" type="integer" variable="$language"/>
      <param description="A hash array of setup options, from the following possible keys:" type="boolean" variable="$setup">- forceLanguage: Use this specific language. Otherwise, the detected language is used.</param>
      <return description="The language name, false if the specified language is not configured." type="mixed"/>
    </docblock>
    <parameter name="language" byreference="false" type="{unknown}"/>
    <parameter name="setup" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getText" start="244" end="320" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getText">Returns a text from the multilingual texts database</description>
      <param description="The code of the text. Can also be specified as &lt;category code&gt;/&lt;text code&gt; in order to discern texts that are stored with the same code in different categories." type="string" variable="$code"/>
      <param description="Additional setup with the following possible keys:" type="array" variable="$setup">* variables: A hash array of the variables that must be replaced taking the text as a pattern. Every occurrence of {&lt;key&gt;} will be replaced with its corresponding value on this array, in the syntax:
	[
		"key" =&gt; "value",
		"key" =&gt; [LANGUAGE_SPANISH =&gt; "spanish value", LANGUAGE_ENGLISH =&gt; "english value"],
		...
	]
* forceLanguage: Force the retrieval of the text on this language. Otherwise, the detected language is used.
* forceTextCacheTtl: Use this Ttl for the text cache instead of the module configuration variable textCacheDefaultTtl
* isPurifyVariables: True. Whether to purify values from specified variables for security purposes or not.</param>
      <return description="The text" type="string"/>
    </docblock>
    <parameter name="code" byreference="false" type="{unknown}"/>
    <parameter name="setup" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getFromData" start="332" end="334" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getFromData">Given the $data hash-array with language-dependant keys named in the syntax of &lt;$fieldBaseName&gt;&lt;language id&gt;, it returns the proper value for the current language</description>
      <param description="The data hash-array to get the field from" type="array" variable="$data"/>
      <param description="The base name of the field, &lt;language id&gt; will be appended to get the corresponding localized content" type="string" variable="$fieldBaseName"/>
      <param description="If specified, forces the retrieval of the specified language instead of the Locale language" type="int" variable="$forceLanguage"/>
      <return description="The contents of the localized data" type="mixed"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="fieldBaseName" byreference="false" type="{unknown}"/>
    <parameter name="forceLanguage" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getFromArray" start="345" end="347" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getFromArray">Given the $data hash-array with language-dependant keys in the syntax of &lt;language id&gt; =&gt; &lt;content&gt;, it returns the proper value for the current language</description>
      <param description="The data hash-array to get the field from" type="array" variable="$data"/>
      <param description="If specified, forces the retrieval of the specified language instead of the Locale language" type="int" variable="$forceLanguage"/>
      <return description="The contents of the localized data" type="mixed"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="forceLanguage" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getFieldFromDatabaseRow" start="359" end="361" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getFieldFromDatabaseRow">Given a DatabaseRow with language-dependant fields named in the syntax of &lt;$fieldBaseName&gt;&lt;language id&gt;, it returns the proper field contents for the current language</description>
      <param description="The DatabaseRow to get the field from" type="object" variable="$databaseRow">
        <type full="Cherrycake\Modules\DatabaseRow" namespace="Cherrycake\Modules" name="DatabaseRow"/>
      </param>
      <param description="The base name of the field, &lt;language id&gt; will be appended to get the corresponding localized content" type="string" variable="$fieldBaseName"/>
      <param description="If specified, forces the retrieval of the specified language instead of the Locale language" type="int" variable="$forceLanguage"/>
      <return description="The contents of the localized field" type="mixed"/>
    </docblock>
    <parameter name="databaseRow" byreference="false" type="{unknown}"/>
    <parameter name="fieldBaseName" byreference="false" type="{unknown}"/>
    <parameter name="forceLanguage" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="setDateFormat" start="367" end="369" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the date format to use"/>
      <param description="The desired dateFormat, one of the available DATE_FORMAT_" type="integer" variable="$dateFormat"/>
    </docblock>
    <parameter name="dateFormat" byreference="false" type="{unknown}"/>
  </method>
  <method name="setTemperatureUnits" start="375" end="377" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the temperature units to use"/>
      <param description="The desired temperature units, one of the available TEMPERATURE_UNITS_" type="integer" variable="$temperatureUnits"/>
    </docblock>
    <parameter name="temperatureUnits" byreference="false" type="{unknown}"/>
  </method>
  <method name="setCurrency" start="383" end="385" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the currency to use"/>
      <param description="The desired currency, one of the available CURRENCY_" type="integer" variable="$currency"/>
    </docblock>
    <parameter name="currency" byreference="false" type="{unknown}"/>
  </method>
  <method name="setDecimalMark" start="391" end="393" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the decimal mark to use"/>
      <param description="The desired decimal mark, one of the available DECIMAL_MARK_" type="integer" variable="$decimalMark"/>
    </docblock>
    <parameter name="decimalMark" byreference="false" type="{unknown}"/>
  </method>
  <method name="setMeasurementSystem" start="399" end="401" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the measurement system to use"/>
      <param description="The desired measurement system, one of the available MEASUREMENT_SYSTEM_" type="integer" variable="$measurementSystem"/>
    </docblock>
    <parameter name="measurementSystem" byreference="false" type="{unknown}"/>
  </method>
  <method name="setLanguage" start="407" end="409" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the language to use"/>
      <param description="The language" type="integer" variable="$language"/>
    </docblock>
    <parameter name="language" byreference="false" type="{unknown}"/>
  </method>
  <method name="getLanguage" start="414" end="416" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="The language that is being currently used, one of the LANGUAGE_" type="integer"/>
    </docblock>
  </method>
  <method name="setTimeZone" start="422" end="424" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the Timezone to use"/>
      <param description="The desired timezone, one of defined in PHP constants as specified in http://php.net/manual/en/timezones.php" type="integer" variable="$timeZone"/>
    </docblock>
    <parameter name="timeZone" byreference="false" type="{unknown}"/>
  </method>
  <method name="getTimeZone" start="429" end="431" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="The timezone being used" type="integer"/>
    </docblock>
  </method>
  <method name="getTimeZoneName" start="437" end="471" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="The timezone id to obtain the name of. If not specified, the current locale timezone is used" type="integer" variable="$timezone"/>
      <return description="The timezone name in the TZ standard" type="string"/>
    </docblock>
    <parameter name="timezone" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="convertTimestamp" start="484" end="502" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="convertTimestamp">Converts a given timestamp from one timezone to another.
The passed $timestamp is considered to be in $toTimezone, the equivalent timestamp for the given $toTimezone is returned</description>
      <param description="The timestamp to convert. Expected to be in the given $fromTimezone. The default cherrycake TIMEZONE configuration is considered as $fromTimezone if not specified (Usually Etc/UTC)" type="integer" variable="$timestamp"/>
      <param description="The desired timezone, one of the PHP constants as specified in http://php.net/manual/en/timezones.php. If none specified, the current Locale timezone is used." type="integer" variable="$toTimeZone"/>
      <param description="The timezone on which the given $timestamp is considered to be in. If not specified the default cherrycake TIMEZONE configuration is used. (Usually Etc/UTC)" type="object" variable="$fromTimeZone">
        <type full="Cherrycake\Modules\bool" namespace="Cherrycake\Modules" name="bool"/>
      </param>
      <return description="The converted timestamp" type="integer"/>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}"/>
    <parameter name="toTimeZone" byreference="false" type="boolean" default="false"/>
    <parameter name="fromTimeZone" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="formatTimestamp" start="513" end="656" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Given a timestamp, returns a formatted date/time according to current locale settings.">The given timestamp will be converted to the configured "toTimeZone" config key, or to the current locale timestamp if not given.
The given timestamp is considered to be in the engine's default timezone configured in cherrycake config as TIMEZONE const, except if the "fromTimeZone" is given via $setup.</description>
      <param description="The timestamp to use, in UNIX timestamp format" type="int" variable="$timestamp"/>
      <param description="A hash array with setup options" type="array" variable="$setup"/>
      <return description="The formatted timestamp" type="string"/>
    </docblock>
    <parameter name="timestamp" byreference="false" type="{unknown}"/>
    <parameter name="setup" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="If no fromTimeZone specified for the given timestamp, the engine TIMEZONE is assumed" line="514"/>
      <comment value="Convert the given timestamp to the Locale timezone" line="539"/>
    </inline>
  </method>
  <method name="formatNumber" start="669" end="686" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Formats the given number according to the current locale settings, and the given setup"/>
      <param description="The number" type="int" variable="$timestamp"/>
      <param description="A hash array with setup options, from the following:" type="array" variable="$setup">- decimals: The number of decimals to show. Defaults to zero.
                    - decimalMark: The decimal mark to use, DECIMAL_MARK_POINT or DECIMAL_MARK_COMMA. Defaults to the current locale setting.
                    - isSeparateThousands: Whether to separate thousands or not. Defaults to false.
                    - multiplier: A multiplier, or false if no multiplier should be applied. Defaults to false.</param>
      <return description="The formatted number" type="string"/>
    </docblock>
    <parameter name="number" byreference="false" type="{unknown}"/>
    <parameter name="setup" byreference="false" type="boolean" default="false"/>
  </method>
  <parent full="Cherrycake\Module" namespace="Cherrycake" name="Module">
    <member name="isConfigFile" type="boolean" default="false" visibility="protected" static="false" line="24">
      <docblock>
        <description/>
        <var description="$isConfig Sets whether this module has its own configuration file. Defaults to false." type="object">
          <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
        </var>
      </docblock>
    </member>
    <member name="config" visibility="protected" static="false" line="29">
      <docblock>
        <description/>
        <var description="$config Holds the default configuration for this module" type="array"/>
      </docblock>
    </member>
    <member name="dependentCherrycakeModules" visibility="protected" static="false" line="34">
      <docblock>
        <description/>
        <var description="$dependentCherrycakeModules Cherrycake module names that are required by this module" type="array"/>
      </docblock>
    </member>
    <member name="dependentAppModules" visibility="protected" static="false" line="39">
      <docblock>
        <description/>
        <var description="$dependentAppModules App module names that are required by this module" type="array"/>
      </docblock>
    </member>
    <method name="loadConfigFile" start="46" end="52" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadConfigFile">Loads the configuration file for this module, if there's one</description>
      </docblock>
    </method>
    <method name="config" start="61" end="69" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="config">Sets the module configuration</description>
        <param description="An array of configuration options for this module. It merges them with the hard coded default values configured in the overloaded module." type="array" variable="$config"/>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
    <method name="getConfig" start="79" end="84" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getConfig">Gets a configuration value</description>
        <param description="The configuration key" type="string" variable="$key"/>
        <return description="The value of the specified config key. Returns false if doesn't exists." type="mixed"/>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
    </method>
    <method name="setConfig" start="94" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="setConfig">Sets a configuration value</description>
        <param description="The configuration key, or a hash array of keys =&gt; values if multiple keys are to be changed" type="string" variable="$key"/>
        <param description="The configuration value" type="string" variable="$value"/>
      </docblock>
      <parameter name="keyOrKeys" byreference="false" type="{unknown}"/>
      <parameter name="value" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="loadDependencies" start="110" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadDependencies">Loads the dependent modules required by this one</description>
        <return description="Whether the dependent modules were loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="mapActions" start="131" end="132" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="mapActions">Maps the Actions to which this module must respond. Should be overloaded by a module class when needed. Intended to contain calls to self::mapAction()</description>
      </docblock>
    </method>
    <method name="addCssAndJavascript" start="139" end="140" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="addCssAndJavascript">Adds the Css/Javascript files/code needed by this module to the proper set on Css and Javascript modules.</description>
      </docblock>
    </method>
    <method name="init" start="151" end="158" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="init">Initializes the module, intended to be overloaded.
Called when the module is loaded.
Contains any specific initializations for the module, and any required loading of modules and classes dependencies.</description>
        <return description="Whether the module has been loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="arrayMergeRecursiveDistinct" start="172" end="182" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="arrayMergeRecursiveDistinct">Joins two arrays like PHP function array_merge_recursive_distinct does, but instead it does not adds elements to arrays when keys match: it replaces them.</description>
        <author value="Daniel &lt;daniel (at) danielsmedegaardbuus (dot) dk&gt;"/>
        <author value="Gabriel Sobrinho &lt;gabriel (dot) sobrinho (at) gmail (dot) com&gt;"/>
        <param description="The first array to merge" type="array" variable="$array1"/>
        <param description="The second array to merge" type="array" variable="$array2"/>
        <return description="The merged array" type="array"/>
      </docblock>
      <parameter name="array1" byreference="true" type="array"/>
      <parameter name="array2" byreference="true" type="array"/>
    </method>
  </parent>
</class>
