<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cherrycake\JanitorTaskJanitorPurge" namespace="Cherrycake" name="JanitorTaskJanitorPurge" abstract="false" final="false" start="20" end="120">
  <file path="/var/www/lib/cherrycake/modules/Janitor" file="JanitorTaskJanitorPurge.class.php" realpath="/var/www/lib/cherrycake/modules/Janitor/JanitorTaskJanitorPurge.class.php" size="3914" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="56657c63c1ecca06d286bd490bda80a60cf45a1e" relative="modules/Janitor/JanitorTaskJanitorPurge.class.php"/>
  <docblock>
    <description compact="JanitorTaskJanitorPurge">A JanitorTask to maintain the Janitor module itself
Purges the old log items on the database to avoid unnecessary database cluttering.</description>
    <package value="Cherrycake"/>
    <category value="Classes"/>
  </docblock>
  <extends full="Cherrycake\JanitorTask" namespace="Cherrycake" name="JanitorTask"/>
  <member name="isConfigFile" type="boolean" default="true" visibility="protected" static="false" line="25">
    <docblock>
      <description/>
      <var description="$isConfig Sets whether this JanitorTask has its own configuration file. Defaults to false." type="object">
        <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="config" type="array" default="" visibility="protected" static="false" line="30">
    <docblock>
      <description/>
      <var description="$config Default configuration options" type="array"/>
    </docblock>
  </member>
  <member name="name" type="string" default="&quot;Janitor purge&quot;" visibility="protected" static="false" line="39">
    <docblock>
      <description/>
      <var description="$name The name of the task" type="string"/>
    </docblock>
  </member>
  <member name="description" type="string" default="&quot;Purges old Janitor log items&quot;" visibility="protected" static="false" line="44">
    <docblock>
      <description/>
      <var description="$description The description of the task" type="string"/>
    </docblock>
  </member>
  <method name="getDebugInfo" start="53" end="57" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getDebugInfo">Returns a hash array with debug info for this task. Can be overloaded to return additional info, on which case the specific results should be merged with this results with array_merge(parent::getDebugInfo(), &lt;specific debug info array&gt;)</description>
      <return description="Hash array with debug info for this task" type="array"/>
    </docblock>
  </method>
  <method name="run" start="67" end="119" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="run">Performs the tasks for what this JanitorTask is meant.</description>
      <param description="The base timestamp to use for time-based calculations when running this task. Usually, now." type="integer" variable="$baseTimestamp"/>
      <return description="A one-dimensional array with the keys: {&lt;One of JANITORTASK_EXECUTION_RETURN_? consts&gt;, &lt;Task result/error/health check description. Can be an array if different keys of information need to be given.&gt;}" type="array"/>
    </docblock>
    <parameter name="baseTimestamp" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Loads the needed modules" line="70"/>
      <comment value="Purge sessions older than PurgeSessionsWithoutDataOlderThanSeconds without data" line="75"/>
    </inline>
  </method>
  <parent full="Cherrycake\JanitorTask" namespace="Cherrycake" name="JanitorTask">
    <member name="isConfigFile" type="boolean" default="false" visibility="protected" static="false" line="31">
      <docblock>
        <description/>
        <var description="$isConfig Sets whether this JanitorTask has its own configuration file. Defaults to false." type="object">
          <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
        </var>
      </docblock>
    </member>
    <member name="config" type="array" default="" visibility="protected" static="false" line="36">
      <docblock>
        <description/>
        <var description="$config Holds the default configuration for this JanitorTask" type="array"/>
      </docblock>
    </member>
    <member name="name" visibility="protected" static="false" line="43">
      <docblock>
        <description/>
        <var description="$name The name of the task" type="string"/>
      </docblock>
    </member>
    <member name="description" visibility="protected" static="false" line="48">
      <docblock>
        <description/>
        <var description="$description The description of the task" type="string"/>
      </docblock>
    </member>
    <method name="loadConfigFile" start="55" end="62" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadConfigFile">Loads the configuration file for this JanitorTask, if there's one</description>
      </docblock>
    </method>
    <method name="config" start="71" end="79" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="config">Sets the ui component configuration</description>
        <param description="An array of configuration options for this janitor task. It merges them with the hard coded default values configured in the overloaded janitor task class." type="array" variable="$config"/>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
    <method name="init" start="90" end="93" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="init">Initializes the JanitorTask, intended to be overloaded.
Called when the JanitorTask is loaded.
Contains any specific initializations for the JanitorTask, and any required loading of dependencies.</description>
        <return description="Whether the JanitorTask has been loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="getConfig" start="102" end="105" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getConfig">Gets a configuration value</description>
        <param description="The configuration key" type="string" variable="$key"/>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
    </method>
    <method name="run" start="115" end="116" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="run">Performs the tasks for what this JanitorTask is meant. Must be overloaded by a higher level JanitorTask class.</description>
        <param description="The base timestamp to use for time-based calculations when running this task. Usually, now." type="integer" variable="$baseTimestamp"/>
        <return description="A one-dimensional array with the keys: {&lt;One of JANITORTASK_EXECUTION_RETURN_? consts&gt;, &lt;Task result/error/health check description. Can be an array if different keys of information need to be given.&gt;}" type="array"/>
      </docblock>
      <parameter name="baseTimestamp" byreference="false" type="{unknown}"/>
    </method>
    <method name="getName" start="123" end="125" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getName"/>
        <return description="The name of the task" type="string"/>
      </docblock>
    </method>
    <method name="getDescription" start="132" end="134" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getDescription"/>
        <return description="The description of the task" type="string"/>
      </docblock>
    </method>
    <method name="getLastExecutionTimestamp" start="141" end="163" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getLastExecutionTimestamp"/>
        <return description="The timestamp on which this task ran for the last time. False if haven't ever run." type="mixed"/>
      </docblock>
    </method>
    <method name="isToBeExecuted" start="173" end="278" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="isToBeExecuted">Determines whether this task should be executed on the given timestamp (usually now)</description>
        <param description="The timestamp to use for the calculation, usually now. If not provided, the present time is used." type="integer" variable="$baseTimestamp"/>
        <return description="Whether this task should be executed on the given timestamp (usually now)" type="object">
          <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
        </return>
      </docblock>
      <parameter name="baseTimestamp" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="getStatus" start="287" end="316" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getStatus">Returns a hash array containing status information about this task: The last execution and status.</description>
        <return description="A hash array containing status information about this task. Return false if no info about the last execution of this task could be retrieved." type="mixed"/>
      </docblock>
      <inline>
        <comment value="Get last execution log for this task" line="290"/>
      </inline>
    </method>
    <method name="getDebugInfo" start="325" end="330" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getDebugInfo">Returns a hash array with debug info for this task. Can be overloaded to return additional info, on which case the specific results should be merged with this results with array_merge(parent::getDebugInfo(), &lt;specific debug info array&gt;)</description>
        <return description="Hash array with debug info for this task" type="array"/>
      </docblock>
    </method>
    <method name="getPeriodicityDebugInfo" start="337" end="359" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getPeriodicityDebugInfo"/>
        <return description="Hash array with debug info about the periodicity of this task." type="array"/>
      </docblock>
    </method>
    <method name="getDebugInfoHtml" start="370" end="380" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getDebugInfoHtml">Returns debug info about this task in HTML format</description>
        <setup value="array $setup Setup options, available keys:">- tableClass: The CSS class to use for the table</setup>
        <return description="Debug info about this task in HTML format" type="string"/>
      </docblock>
      <parameter name="setup" byreference="false" type="boolean" default="false"/>
    </method>
  </parent>
</class>
