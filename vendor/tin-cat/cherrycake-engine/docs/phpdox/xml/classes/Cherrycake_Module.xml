<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cherrycake\Module" namespace="Cherrycake" name="Module" abstract="false" final="false" start="19" end="183">
  <file path="/var/www/lib/cherrycake" file="module.class.php" realpath="/var/www/lib/cherrycake/module.class.php" size="4715" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="c2a2129066c6df9ded7cba7e05c879abaa0825f4" relative="module.class.php"/>
  <docblock>
    <description compact="Module">The base class for modules. Intented to be overloaded by specific functionality classes</description>
    <package value="Cherrycake"/>
    <category value="Modules"/>
  </docblock>
  <member name="isConfigFile" type="boolean" default="false" visibility="protected" static="false" line="24">
    <docblock>
      <description/>
      <var description="$isConfig Sets whether this module has its own configuration file. Defaults to false." type="object">
        <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="config" visibility="protected" static="false" line="29">
    <docblock>
      <description/>
      <var description="$config Holds the default configuration for this module" type="array"/>
    </docblock>
  </member>
  <member name="dependentCherrycakeModules" visibility="protected" static="false" line="34">
    <docblock>
      <description/>
      <var description="$dependentCherrycakeModules Cherrycake module names that are required by this module" type="array"/>
    </docblock>
  </member>
  <member name="dependentAppModules" visibility="protected" static="false" line="39">
    <docblock>
      <description/>
      <var description="$dependentAppModules App module names that are required by this module" type="array"/>
    </docblock>
  </member>
  <method name="loadConfigFile" start="46" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="loadConfigFile">Loads the configuration file for this module, if there's one</description>
    </docblock>
  </method>
  <method name="config" start="61" end="69" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="config">Sets the module configuration</description>
      <param description="An array of configuration options for this module. It merges them with the hard coded default values configured in the overloaded module." type="array" variable="$config"/>
    </docblock>
    <parameter name="config" byreference="false" type="{unknown}"/>
  </method>
  <method name="getConfig" start="79" end="84" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getConfig">Gets a configuration value</description>
      <param description="The configuration key" type="string" variable="$key"/>
      <return description="The value of the specified config key. Returns false if doesn't exists." type="mixed"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="setConfig" start="94" end="101" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="setConfig">Sets a configuration value</description>
      <param description="The configuration key, or a hash array of keys =&gt; values if multiple keys are to be changed" type="string" variable="$key"/>
      <param description="The configuration value" type="string" variable="$value"/>
    </docblock>
    <parameter name="keyOrKeys" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="loadDependencies" start="110" end="124" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="loadDependencies">Loads the dependent modules required by this one</description>
      <return description="Whether the dependent modules were loaded ok" type="boolean"/>
    </docblock>
  </method>
  <method name="mapActions" start="131" end="132" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="mapActions">Maps the Actions to which this module must respond. Should be overloaded by a module class when needed. Intended to contain calls to self::mapAction()</description>
    </docblock>
  </method>
  <method name="addCssAndJavascript" start="139" end="140" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addCssAndJavascript">Adds the Css/Javascript files/code needed by this module to the proper set on Css and Javascript modules.</description>
    </docblock>
  </method>
  <method name="init" start="151" end="158" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="init">Initializes the module, intended to be overloaded.
Called when the module is loaded.
Contains any specific initializations for the module, and any required loading of modules and classes dependencies.</description>
      <return description="Whether the module has been loaded ok" type="boolean"/>
    </docblock>
  </method>
  <method name="arrayMergeRecursiveDistinct" start="172" end="182" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="arrayMergeRecursiveDistinct">Joins two arrays like PHP function array_merge_recursive_distinct does, but instead it does not adds elements to arrays when keys match: it replaces them.</description>
      <author value="Daniel &lt;daniel (at) danielsmedegaardbuus (dot) dk&gt;"/>
      <author value="Gabriel Sobrinho &lt;gabriel (dot) sobrinho (at) gmail (dot) com&gt;"/>
      <param description="The first array to merge" type="array" variable="$array1"/>
      <param description="The second array to merge" type="array" variable="$array2"/>
      <return description="The merged array" type="array"/>
    </docblock>
    <parameter name="array1" byreference="true" type="array"/>
    <parameter name="array2" byreference="true" type="array"/>
  </method>
  <extenders>
    <extender full="Cherrycake\Modules\Login" namespace="Cherrycake\Modules" name="Login"/>
    <extender full="Cherrycake\Modules\SystemLog" namespace="Cherrycake\Modules" name="SystemLog"/>
    <extender full="Cherrycake\Modules\Cache" namespace="Cherrycake\Modules" name="Cache"/>
    <extender full="Cherrycake\Modules\Locale" namespace="Cherrycake\Modules" name="Locale"/>
    <extender full="Cherrycake\Modules\Javascript" namespace="Cherrycake\Modules" name="Javascript"/>
    <extender full="Cherrycake\Modules\Css" namespace="Cherrycake\Modules" name="Css"/>
    <extender full="Cherrycake\Modules\Session" namespace="Cherrycake\Modules" name="Session"/>
    <extender full="Cherrycake\Modules\HtmlDocument" namespace="Cherrycake\Modules" name="HtmlDocument"/>
    <extender full="Cherrycake\Modules\Stats" namespace="Cherrycake\Modules" name="Stats"/>
    <extender full="Cherrycake\Modules\Errors" namespace="Cherrycake\Modules" name="Errors"/>
    <extender full="Cherrycake\Modules\Database" namespace="Cherrycake\Modules" name="Database"/>
    <extender full="Cherrycake\Modules\Validate" namespace="Cherrycake\Modules" name="Validate"/>
    <extender full="Cherrycake\Modules\Janitor" namespace="Cherrycake\Modules" name="Janitor"/>
    <extender full="Cherrycake\Modules\Output" namespace="Cherrycake\Modules" name="Output"/>
    <extender full="Cherrycake\Modules\Actions" namespace="Cherrycake\Modules" name="Actions"/>
    <extender full="Cherrycake\Modules\Security" namespace="Cherrycake\Modules" name="Security"/>
    <extender full="Cherrycake\Modules\Patterns" namespace="Cherrycake\Modules" name="Patterns"/>
    <extender full="Cherrycake\Modules\Browser" namespace="Cherrycake\Modules" name="Browser"/>
    <extender full="Cherrycake\Modules\Log" namespace="Cherrycake\Modules" name="Log"/>
    <extender full="Cherrycake\Modules\Ui" namespace="Cherrycake\Modules" name="Ui"/>
  </extenders>
</class>
