<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cherrycake\Modules\Javascript" namespace="Cherrycake\Modules" name="Javascript" abstract="false" final="false" start="53" end="314">
  <file path="/var/www/lib/cherrycake/modules/Javascript" file="Javascript.class.php" realpath="/var/www/lib/cherrycake/modules/Javascript/Javascript.class.php" size="9174" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="50f4d34b5d498f468bd07dd4a7797a7669c64036" relative="modules/Javascript/Javascript.class.php"/>
  <docblock>
    <description compact="Javascript">Module that manages Javascript code.

* It works nicely in conjunction with HtmlDocument module.
* Javascript code minifying.
* Multiple Js files are loaded in just one request.
* Treats Js files as patterns in conjunction with Patterns module, allowing the use of calls to the engine within Js code, PHP programming structures, variables, etc.
* Implements "file sets"
* Implements Javascript code caching in conjunction with Cache module.

Configuration example for javascript.config.php:
&lt;code&gt;
$javascriptConfig = [
	"defaultDirectory" =&gt; "res/js", // The default directory where Javascript files in each Javascript set will be searched
	"cacheTtl" =&gt; \Cherrycake\Modules\CACHE_TTL_LONGEST, // The cache TTL for JS sets
	"cacheProviderName" =&gt; "fast", // The cache provider for JS sets
	"lastModifiedTimestamp" =&gt; 1, // The last modified timestamp of JS, to handle caches and http cache
 "isCache" =&gt; false, // Whether to use cache or not
 "isHttpCache" =&gt; false, // Whether to send HTTP Cache headers or not
 "httpCacheMaxAge" =&gt; false, // The maximum age in seconds for HTTP Cache
 "isMinify" =&gt; true, // Whether to minify the resulting CSS or not
	"sets" =&gt; [ // The Javascript sets available to be included in HTML documents
		"main" =&gt; [
			"directory" =&gt; "res/javascript/main", // The specific directory where the Javascript files for this set reside
			"files" =&gt; [ // The files that this Javascript set contain
				"main.js"
			]
		],
		"UiComponents" =&gt; [ // This set must be declared when working with Ui module
			"directory" =&gt; "res/javascript/UiComponents",
			"files" =&gt; [ // The default Ui-related Javascript files, these are normally the ones that are not bonded to an specific UiComponent, since any other required file is automatically added here by the specific UiComponent object.
			]
		]
	]
];
&lt;/code&gt;</description>
    <package value="Cherrycake"/>
    <category value="Modules"/>
  </docblock>
  <extends full="Cherrycake\Module" namespace="Cherrycake" name="Module"/>
  <member name="config" type="array" default="" visibility="public" static="false" line="57">
    <docblock>
      <description/>
      <var description="$config Default configuration options" type="array"/>
    </docblock>
  </member>
  <member name="dependentCherrycakeModules" type="array" default="" visibility="public" static="false" line="70">
    <docblock>
      <description/>
      <var description="$dependentCherrycakeModules Cherrycake module names that are required by this module" type="array"/>
    </docblock>
  </member>
  <member name="sets" visibility="private" static="false" line="81">
    <docblock>
      <description/>
      <var description="$sets Contains an array of sets of Javascript files" type="array"/>
    </docblock>
  </member>
  <method name="init" start="90" end="108" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="init">Initializes the module</description>
      <return description="Whether the module has been initted ok" type="boolean"/>
    </docblock>
    <inline>
      <comment value="Adds cherrycake sets" line="99"/>
    </inline>
  </method>
  <method name="mapActions" start="115" end="144" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="mapActions">Maps the Actions to which this module must respond</description>
    </docblock>
  </method>
  <method name="addSet" start="152" end="154" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addSet"/>
      <param variable="$setName"/>
      <param variable="$setConfig"/>
    </docblock>
    <parameter name="setName" byreference="false" type="{unknown}"/>
    <parameter name="setConfig" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSetUrl" start="162" end="178" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getSetUrl"/>
      <param description="The name of the Javascript set, or an array of them" type="mixed" variable="$setNames"/>
      <return description="The Url of the Javascript set" type="string"/>
    </docblock>
    <parameter name="setNames" byreference="false" type="{unknown}"/>
  </method>
  <method name="addFileToSet" start="188" end="193" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addFileToSet">Adds a file to a Javascript set</description>
      <param description="The name of the set" type="string" variable="$setName"/>
      <param description="The name of the file" type="string" variable="$fileName"/>
    </docblock>
    <parameter name="setName" byreference="false" type="{unknown}"/>
    <parameter name="fileName" byreference="false" type="{unknown}"/>
  </method>
  <method name="addJavascriptToSet" start="203" end="205" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addJavascriptToSet">Adds the specified Javascript to a set</description>
      <param description="The name of the set" type="string" variable="$setName"/>
      <param description="The Javascript" type="string" variable="$javascript"/>
    </docblock>
    <parameter name="setName" byreference="false" type="{unknown}"/>
    <parameter name="javascript" byreference="false" type="{unknown}"/>
  </method>
  <method name="dump" start="218" end="289" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="dump">Outputs the requested Javascript sets to the client.
It requests all UiComponent objects (if any) in the Ui module to add their own Javascript code or to include their needed Javascript files.
It guesses what Javascript sets to dump via the "set" get parameter.
It handles Javascript caching,
Intended to be called from a &lt;script src ...&gt;</description>
      <param description="The Request object received" type="object" variable="$request">
        <type full="Cherrycake\Modules\Request" namespace="Cherrycake\Modules" name="Request"/>
      </param>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Final call to executeDeferredInlineJavascript function that executes all deferred inline javascript when everything else is loaded" line="277"/>
    </inline>
  </method>
  <method name="minify" start="299" end="301" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="minify">Minifies Javascript code</description>
      <param description="The Javascript to minify" type="string" variable="$javascript"/>
      <return description="The minified Javascript" type="string"/>
    </docblock>
    <parameter name="javascript" byreference="false" type="{unknown}"/>
  </method>
  <method name="safeString" start="311" end="313" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="safeString">Returns an escaped version of the given $string that can be safely used between javascript single-quotes</description>
      <param description="The string to treat" type="string" variable="$string"/>
      <return description="The escaped string" type="string"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Cherrycake\Module" namespace="Cherrycake" name="Module">
    <member name="isConfigFile" type="boolean" default="false" visibility="protected" static="false" line="24">
      <docblock>
        <description/>
        <var description="$isConfig Sets whether this module has its own configuration file. Defaults to false." type="object">
          <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
        </var>
      </docblock>
    </member>
    <member name="config" visibility="protected" static="false" line="29">
      <docblock>
        <description/>
        <var description="$config Holds the default configuration for this module" type="array"/>
      </docblock>
    </member>
    <member name="dependentCherrycakeModules" visibility="protected" static="false" line="34">
      <docblock>
        <description/>
        <var description="$dependentCherrycakeModules Cherrycake module names that are required by this module" type="array"/>
      </docblock>
    </member>
    <member name="dependentAppModules" visibility="protected" static="false" line="39">
      <docblock>
        <description/>
        <var description="$dependentAppModules App module names that are required by this module" type="array"/>
      </docblock>
    </member>
    <method name="loadConfigFile" start="46" end="52" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadConfigFile">Loads the configuration file for this module, if there's one</description>
      </docblock>
    </method>
    <method name="config" start="61" end="69" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="config">Sets the module configuration</description>
        <param description="An array of configuration options for this module. It merges them with the hard coded default values configured in the overloaded module." type="array" variable="$config"/>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
    <method name="getConfig" start="79" end="84" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getConfig">Gets a configuration value</description>
        <param description="The configuration key" type="string" variable="$key"/>
        <return description="The value of the specified config key. Returns false if doesn't exists." type="mixed"/>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
    </method>
    <method name="setConfig" start="94" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="setConfig">Sets a configuration value</description>
        <param description="The configuration key, or a hash array of keys =&gt; values if multiple keys are to be changed" type="string" variable="$key"/>
        <param description="The configuration value" type="string" variable="$value"/>
      </docblock>
      <parameter name="keyOrKeys" byreference="false" type="{unknown}"/>
      <parameter name="value" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="loadDependencies" start="110" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadDependencies">Loads the dependent modules required by this one</description>
        <return description="Whether the dependent modules were loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="mapActions" start="131" end="132" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="mapActions">Maps the Actions to which this module must respond. Should be overloaded by a module class when needed. Intended to contain calls to self::mapAction()</description>
      </docblock>
    </method>
    <method name="addCssAndJavascript" start="139" end="140" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="addCssAndJavascript">Adds the Css/Javascript files/code needed by this module to the proper set on Css and Javascript modules.</description>
      </docblock>
    </method>
    <method name="init" start="151" end="158" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="init">Initializes the module, intended to be overloaded.
Called when the module is loaded.
Contains any specific initializations for the module, and any required loading of modules and classes dependencies.</description>
        <return description="Whether the module has been loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="arrayMergeRecursiveDistinct" start="172" end="182" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="arrayMergeRecursiveDistinct">Joins two arrays like PHP function array_merge_recursive_distinct does, but instead it does not adds elements to arrays when keys match: it replaces them.</description>
        <author value="Daniel &lt;daniel (at) danielsmedegaardbuus (dot) dk&gt;"/>
        <author value="Gabriel Sobrinho &lt;gabriel (dot) sobrinho (at) gmail (dot) com&gt;"/>
        <param description="The first array to merge" type="array" variable="$array1"/>
        <param description="The second array to merge" type="array" variable="$array2"/>
        <return description="The merged array" type="array"/>
      </docblock>
      <parameter name="array1" byreference="true" type="array"/>
      <parameter name="array2" byreference="true" type="array"/>
    </method>
  </parent>
</class>
