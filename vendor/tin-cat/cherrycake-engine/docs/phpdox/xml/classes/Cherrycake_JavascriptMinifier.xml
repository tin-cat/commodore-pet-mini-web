<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cherrycake\JavascriptMinifier" namespace="Cherrycake" name="JavascriptMinifier" abstract="false" final="false" start="32" end="586">
  <file path="/var/www/lib/cherrycake/classes" file="JavascriptMinifier.class.php" realpath="/var/www/lib/cherrycake/classes/JavascriptMinifier.class.php" size="14604" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="b67c5b012ce4bc6cdf9acd468e446f02d34ff130" relative="classes/JavascriptMinifier.class.php"/>
  <docblock>
    <description compact="JavascriptMinifier">Usage - JavascriptMinifier::minify($js);
Usage - JavascriptMinifier::minify($js, $options);
Usage - JavascriptMinifier::minify($js, ['flaggedComments' =&gt; false]);</description>
    <package value="Cherrycake"/>
    <author value="Robert Hafner &lt;tedivm@tedivm.com&gt;"/>
    <license name="http://www.opensource.org/licenses/bsd-license.php  BSD License"/>
  </docblock>
  <member name="input" visibility="protected" static="false" line="39">
    <docblock>
      <description compact="The input javascript to be minified."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="index" type="integer" default="0" visibility="protected" static="false" line="47">
    <docblock>
      <description compact="The location of the character (in the input string) that is next to be processed."/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="a" type="string" default="''" visibility="protected" static="false" line="54">
    <docblock>
      <description compact="The first of the characters currently being looked at."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="b" type="string" default="''" visibility="protected" static="false" line="61">
    <docblock>
      <description compact="The next character being looked at (after a);"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="c" visibility="protected" static="false" line="68">
    <docblock>
      <description compact="This character is only active when certain look ahead actions take place.">@var string</description>
    </docblock>
  </member>
  <member name="options" visibility="protected" static="false" line="75">
    <docblock>
      <description compact="Contains the options for the current minification process."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="defaultOptions" type="array" default="" visibility="protected" static="true" line="84">
    <docblock>
      <description compact="Contains the default options for minification. This array is merged with the one passed in by the user to create the request specific set of options (stored in the $options attribute)."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="locks" type="array" default="" visibility="protected" static="false" line="92">
    <docblock>
      <description compact="Contains lock ids which are used to replace certain code patterns and prevent them from being minified"/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="minify" start="103" end="132" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Takes a string containing javascript and removes unneeded characters in order to shrink the code without altering it's functionality."/>
      <param description="The raw javascript to be minified" type="string" variable="$js"/>
      <param description="Various runtime options in an associative array" type="array" variable="$options"/>
      <throws type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </throws>
      <return type="object">
        <type full="Cherrycake\bool|string" namespace="Cherrycake" name="bool|string"/>
      </return>
    </docblock>
    <parameter name="js" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="array" default=""/>
  </method>
  <method name="minifyDirectToOutput" start="141" end="146" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Processes a javascript string and outputs only the required characters, stripping out all unneeded characters."/>
      <param description="The raw javascript to be minified" type="string" variable="$js"/>
      <param description="Various runtime options in an associative array" type="array" variable="$options"/>
    </docblock>
    <parameter name="js" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="{unknown}"/>
  </method>
  <method name="initialize" start="154" end="169" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Initializes internal variables, normalizes new lines,"/>
      <param description="The raw javascript to be minified" type="string" variable="$js"/>
      <param description="Various runtime options in an associative array" type="array" variable="$options"/>
    </docblock>
    <parameter name="js" byreference="false" type="{unknown}"/>
    <parameter name="options" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="We add a newline to the end of the script to make it easier to deal" line="160"/>
      <comment value="with comments at the bottom of the script- this prevents the unclosed" line="161"/>
      <comment value="comment error that can otherwise occur." line="162"/>
      <comment value="Populate &quot;a&quot; with a new line, &quot;b&quot; with the first character, before" line="165"/>
      <comment value="entering the loop" line="166"/>
    </inline>
  </method>
  <method name="loop" start="175" end="241" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="The primary action occurs here. This function loops through the input string, outputting anything that's relevant and discarding anything that is not."/>
    </docblock>
  </method>
  <method name="clean" start="248" end="255" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Resets attributes that do not need to be stored between requests so that the next request is ready to go. Another reason for this is to make sure the variables are cleared and are not taking up memory."/>
    </docblock>
  </method>
  <method name="getChar" start="262" end="289" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Returns the next string for processing based off of the current index."/>
      <return type="string"/>
    </docblock>
    <inline>
      <comment value="Check to see if we had anything in the look ahead buffer and use that." line="264"/>
      <comment value="Normalize all whitespace except for the newline character into a" line="282"/>
      <comment value="standard space." line="283"/>
    </inline>
  </method>
  <method name="getReal" start="301" end="321" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="This function gets the next &quot;real&quot; character. It is essentially a wrapper around the getChar function that skips comments. This has significant performance benefits as the skipping is done using native functions (ie, c code) rather than in script php."/>
      <return description="Next 'real' character to be processed." type="string"/>
      <throws type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <inline>
      <comment value="Check to see if we're potentially in a comment" line="306"/>
    </inline>
  </method>
  <method name="processOneLineComments" start="330" end="348" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Removed one line comments, with the exception of some very specific types of conditional comments."/>
      <param description="The index point where &quot;getReal&quot; function started" type="int" variable="$startIndex"/>
      <return type="string"/>
    </docblock>
    <parameter name="startIndex" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="kill rest of line" line="334"/>
    </inline>
  </method>
  <method name="processMultiLineComments" start="358" end="404" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Skips multiline comments where appropriate, and includes them where needed.">Conditional comments and "license" style blocks are preserved.</description>
      <param description="The index point where &quot;getReal&quot; function started" type="int" variable="$startIndex"/>
      <return description="False if there's no character" type="object">
        <type full="Cherrycake\bool|string" namespace="Cherrycake" name="bool|string"/>
      </return>
      <throws description="Unclosed comments will throw an error" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <parameter name="startIndex" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="current C" line="360"/>
      <comment value="kill everything up to the next */ if it's there" line="363"/>
      <comment value="if we're here c is part of the comment and therefore tossed" line="399"/>
    </inline>
  </method>
  <method name="getNext" start="414" end="429" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Pushes the index ahead to the next instance of the supplied string. If it is found the first character of the string is returned and the index is set to it's position."/>
      <param type="string" variable="$string"/>
      <return description="Returns the first character of the string or false." type="object">
        <type full="Cherrycake\string|false" namespace="Cherrycake" name="string|false"/>
      </return>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Find the next occurrence of &quot;string&quot; after the current position." line="416"/>
      <comment value="If it's not there return false." line="419"/>
      <comment value="Adjust position of index to jump ahead to the asked for string" line="424"/>
      <comment value="Return the first character of that string." line="427"/>
    </inline>
  </method>
  <method name="saveString" start="437" end="502" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="When a javascript string is detected this function crawls for the end of it and saves the whole string."/>
      <throws description="Unclosed strings will throw an error" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
    <inline>
      <comment value="saveString is always called after a gets cleared, so we push b into" line="441"/>
      <comment value="that spot." line="442"/>
      <comment value="If this isn't a string we don't need to do anything." line="445"/>
      <comment value="String type is the quote used, &quot; or '" line="450"/>
      <comment value="Echo out that starting quote" line="453"/>
      <comment value="Loop until the string is done" line="456"/>
    </inline>
  </method>
  <method name="saveRegex" start="510" end="529" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="When a regular expression is detected this function crawls for the end of it and saves the whole regex."/>
      <throws description="Unclosed regex will throw an error" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
    </docblock>
  </method>
  <method name="isAlphaNumeric" start="537" end="540" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Checks to see if a character is alphanumeric."/>
      <param description="Just one character" type="string" variable="$char"/>
      <return type="object">
        <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
      </return>
    </docblock>
    <parameter name="char" byreference="false" type="{unknown}"/>
  </method>
  <method name="lock" start="548" end="565" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace patterns in the given string and store the replacement"/>
      <param description="The string to lock" type="string" variable="$js"/>
      <return type="object">
        <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
      </return>
    </docblock>
    <parameter name="js" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="lock things like &lt;code&gt;&quot;asd&quot; + ++x;&lt;/code&gt;" line="550"/>
      <comment value="*-" line="562"/>
    </inline>
  </method>
  <method name="unlock" start="573" end="584" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Replace &quot;locks&quot; with the original characters"/>
      <param description="The string to unlock" type="string" variable="$js"/>
      <return type="object">
        <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
      </return>
    </docblock>
    <parameter name="js" byreference="false" type="{unknown}"/>
  </method>
</class>
