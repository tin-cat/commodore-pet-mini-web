<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Cherrycake\Modules\Css" namespace="Cherrycake\Modules" name="Css" abstract="false" final="false" start="74" end="631">
  <file path="/var/www/lib/cherrycake/modules/Css" file="Css.class.php" realpath="/var/www/lib/cherrycake/modules/Css/Css.class.php" size="19255" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="07f1954038a2ff345a7080f936200d9a0f7f466d" relative="modules/Css/Css.class.php"/>
  <docblock>
    <description compact="Css">Module that manages Css code.

* It works nicely in conjunction with HtmlDocument module.
* Css code minifying.
* Multiple Css files are loaded in just one request.
* Treats Css files as patterns in conjunction with Patterns module, allowing the use of calls to the engine within Css code, PHP programming structures, variables, etc.
* Implements Css code caching in conjunction with Cache module.
* Implements "file sets"
* Implements a simple code version mechanism that helps avoiding client-side caching problems.

Configuration example for css.config.php:
&lt;code&gt;
$cssConfig = [
	"defaultDirectory" =&gt; "res/css", // The default directory where CSS files in each CSS set will be searched
 "cachePrefix" =&gt; "Css", // The prefix to use for storing CSS on the cache
	"cacheTtl" =&gt; \Cherrycake\Modules\CACHE_TTL_LONGEST, // The cache TTL for CSS sets
	"cacheProviderName" =&gt; "fast", // The cache provider for CSS sets
	"lastModifiedTimestamp" =&gt; 1, // The last modified timestamp of CSS, to handle caches and http cache
 "isCache" =&gt; false, // Whether to use cache or not
 "isHttpCache" =&gt; false, // Whether to send HTTP Cache headers or not
 "httpCacheMaxAge" =&gt; false, // The maximum age in seconds for HTTP Cache
 "isMinify" =&gt; true, // Whether to minify the resulting CSS or not
 "responsiveWidthBreakpoints" =&gt; [ // The different considered responsive widths
     "tiny" =&gt; 500,
     "small" =&gt; 700,
     "normal" =&gt; 980,
     "big" =&gt; 1300,
     "huge" =&gt; 1700
 ],
	"defaultSets" =&gt; [] // The CSS sets available to be included in HTML documents
		"main" =&gt; [
			"directory" =&gt; "res/css/main", // The specific directory where the CSS files for this set reside
			"variablesFile" =&gt; "res/css/cssvariables.php", // A file to include whenever parsing this set files, usually for defining variables that can be later used inside the css files
			"files" =&gt; [ // The files that this CSS set contain
				"main.css",
				"header.css",
				"content.css"
			]
		],
		"UiComponents" =&gt; [ // This set must be declared when working with Ui module
			"version" =&gt; 1,
			"directory" =&gt; "res/css/UiComponents",
			"files" =&gt; [ // The default Ui-related Css files, these are normally the ones that are not bonded to an specific UiComponent, since any other required file is automatically added here by the specific UiComponent object.
			]
		]
	]
];
&lt;/code&gt;</description>
    <package value="Cherrycake"/>
    <category value="Modules"/>
  </docblock>
  <extends full="Cherrycake\Module" namespace="Cherrycake" name="Module"/>
  <member name="config" type="array" default="" visibility="public" static="false" line="78">
    <docblock>
      <description/>
      <var description="$config Default configuration options" type="array"/>
    </docblock>
  </member>
  <member name="dependentCherrycakeModules" type="array" default="" visibility="public" static="false" line="91">
    <docblock>
      <description/>
      <var description="$dependentCherrycakeModules Cherrycake module names that are required by this module" type="array"/>
    </docblock>
  </member>
  <member name="sets" visibility="private" static="false" line="103">
    <docblock>
      <description/>
      <var description="$sets Contains an array of sets of Css files" type="array"/>
    </docblock>
  </member>
  <method name="init" start="112" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="init">Initializes the module</description>
      <return description="Whether the module has been initted ok" type="boolean"/>
    </docblock>
    <inline>
      <comment value="Adds cherrycake sets" line="121"/>
    </inline>
  </method>
  <method name="mapActions" start="137" end="166" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="mapActions">Maps the Actions to which this module must respond</description>
    </docblock>
  </method>
  <method name="addSet" start="174" end="176" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addSet"/>
      <param variable="$setName"/>
      <param variable="$setConfig"/>
    </docblock>
    <parameter name="setName" byreference="false" type="{unknown}"/>
    <parameter name="setConfig" byreference="false" type="{unknown}"/>
  </method>
  <method name="getSetUrl" start="184" end="200" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getSetUrl"/>
      <param description="The name of the Css set, or an array of them" type="mixed" variable="$setNames"/>
      <return description="The Url of the Css set" type="string"/>
    </docblock>
    <parameter name="setNames" byreference="false" type="{unknown}"/>
  </method>
  <method name="addFileToSet" start="210" end="215" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addFileToSet">Adds a file to a Css set</description>
      <param description="The name of the set" type="string" variable="$setName"/>
      <param description="The name of the file" type="string" variable="$fileName"/>
    </docblock>
    <parameter name="setName" byreference="false" type="{unknown}"/>
    <parameter name="fileName" byreference="false" type="{unknown}"/>
  </method>
  <method name="addCssToSet" start="225" end="227" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="addCssToSet">Adds the specified Css to a set</description>
      <param description="The name of the set" type="string" variable="$setName"/>
      <param description="The Css" type="string" variable="$css"/>
    </docblock>
    <parameter name="setName" byreference="false" type="{unknown}"/>
    <parameter name="css" byreference="false" type="{unknown}"/>
  </method>
  <method name="dump" start="240" end="317" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="dump">Outputs the requested CSS sets to the client.
It requests all UiComponent objects (if any) in the Ui module to add their own Css code or to include their needed Css files
It guesses what CSS sets to dump via the "set" get parameter.
It handles CSS caching,
Intended to be called from a &lt;link rel ...&gt;</description>
      <param description="The Request object received" type="object" variable="$request">
        <type full="Cherrycake\Modules\Request" namespace="Cherrycake\Modules" name="Request"/>
      </param>
    </docblock>
    <parameter name="request" byreference="false" type="{unknown}"/>
  </method>
  <method name="minify" start="327" end="331" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="minify">Minifies CSS code</description>
      <param description="The Css to minify" type="string" variable="$css"/>
      <return description="The minified Css" type="string"/>
    </docblock>
    <parameter name="css" byreference="false" type="{unknown}"/>
  </method>
  <method name="generateCssHelperTextColors" start="339" end="344" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="generateCssHelperTextColors"/>
      <param description="colors array to use" variable="$colors" type="object">
        <type full="Cherrycake\Modules\The" namespace="Cherrycake\Modules" name="The"/>
      </param>
      <return description="Text colors Css helper code" type="string"/>
    </docblock>
    <parameter name="colors" byreference="false" type="{unknown}"/>
  </method>
  <method name="generateCssHelperBackgroundColors" start="352" end="357" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="generateCssHelperBackgroundColors"/>
      <param description="colors array to use" variable="$colors" type="object">
        <type full="Cherrycake\Modules\The" namespace="Cherrycake\Modules" name="The"/>
      </param>
      <return description="Background colors Css helper code" type="string"/>
    </docblock>
    <parameter name="colors" byreference="false" type="{unknown}"/>
  </method>
  <method name="generateCssHelperBackgroundGradients" start="365" end="370" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="generateCssHelperBackgroundGradients"/>
      <param description="gradients array to use" variable="$gradients" type="object">
        <type full="Cherrycake\Modules\The" namespace="Cherrycake\Modules" name="The"/>
      </param>
      <return description="Background gradients Css helper code" type="string"/>
    </docblock>
    <parameter name="gradients" byreference="false" type="{unknown}"/>
  </method>
  <method name="unit" start="379" end="387" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="unit"/>
      <param description="The value" type="int" variable="$value"/>
      <param description="The unit. &quot;px&quot; by default." type="string" variable="$unit"/>
      <return description="The value in the specified units" type="string"/>
    </docblock>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="unit" byreference="false" type="string" default="&quot;px&quot;"/>
  </method>
  <method name="clearFix" start="395" end="398" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="clearFix"/>
      <param description="The Css selector of the element to apply clearfix to" type="string" variable="$selector"/>
      <return description="Css to apply clearfix to the specified element" type="string"/>
    </docblock>
    <parameter name="selector" byreference="false" type="{unknown}"/>
  </method>
  <method name="getFileDataBase64" start="406" end="450" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="getFileDataBase64"/>
      <param description="The name of the file" type="string" variable="$fileName"/>
      <return description="A Base64 representation of the specified file apt for Css inclusion." type="string"/>
    </docblock>
    <parameter name="fileName" byreference="false" type="{unknown}"/>
  </method>
  <method name="buildUnsupportedProperty" start="461" end="494" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="buildUnsupportedProperty">Returns CSS to support all equivalents of $baseParameter with given $value</description>
      <param description="The name of the Css property, i.e: &quot;linear-gradient&quot;" type="string" variable="$baseParameter"/>
      <param description="The value" type="string" variable="$value"/>
      <return description="The resulting CSS to support all variants for different browser engines" type="string"/>
    </docblock>
    <parameter name="baseParameter" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Consider exceptions" line="464"/>
    </inline>
  </method>
  <method name="buildBackgroundImageForElement" start="506" end="533" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="buildBackgroundImageForElement">Builds the Css code to apply a background image.
Supports HD version images for high density displays by using a media query
Supports both textures and single images</description>
      <param description="Setup options" type="array" variable="$setup"/>
      <return description="The Css code" type="string"/>
    </docblock>
    <parameter name="setup" byreference="false" type="{unknown}"/>
  </method>
  <method name="mediaQuery" start="552" end="629" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="mediaQuery">Returns a CSS media query aimed to match devices with specific characteristics, or different maximum screen widths</description>
      <param description="The specific characteristics for this media query to match, in the syntax:" type="array" variable="$setup">- css: The CSS code for this media query
 - predefined: One of the available CSS_MEDIAQUERY_* consts (Optional)
 - maxWidthBreakpoint: One of the configured widths on the config variable responsiveWidthBreakpoints to be used as a max width breakpoint for the generated media query (The CSS will take effect when the page width is the specified width or less)
 - minWidthBreakpoint: One of the configured widths on the config variable responsiveWidthBreakpoints to be used as a min width breakpoint for the generated media query (The CSS will take effect when the page width is the specified width or more)
 - characteristics: A key-value array with the specific characteristics for this media query, for example:
     "min-device-width" =&gt; "768px",
     "max-device-width" =&gt; "1024px",
     "-webkit-min-device-pixel-ratio" =&gt; 2,
     "orientation" =&gt; "portrait"</param>
      <return description="The Css" type="string"/>
    </docblock>
    <parameter name="setup" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Cherrycake\Module" namespace="Cherrycake" name="Module">
    <member name="isConfigFile" type="boolean" default="false" visibility="protected" static="false" line="24">
      <docblock>
        <description/>
        <var description="$isConfig Sets whether this module has its own configuration file. Defaults to false." type="object">
          <type full="Cherrycake\bool" namespace="Cherrycake" name="bool"/>
        </var>
      </docblock>
    </member>
    <member name="config" visibility="protected" static="false" line="29">
      <docblock>
        <description/>
        <var description="$config Holds the default configuration for this module" type="array"/>
      </docblock>
    </member>
    <member name="dependentCherrycakeModules" visibility="protected" static="false" line="34">
      <docblock>
        <description/>
        <var description="$dependentCherrycakeModules Cherrycake module names that are required by this module" type="array"/>
      </docblock>
    </member>
    <member name="dependentAppModules" visibility="protected" static="false" line="39">
      <docblock>
        <description/>
        <var description="$dependentAppModules App module names that are required by this module" type="array"/>
      </docblock>
    </member>
    <method name="loadConfigFile" start="46" end="52" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadConfigFile">Loads the configuration file for this module, if there's one</description>
      </docblock>
    </method>
    <method name="config" start="61" end="69" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="config">Sets the module configuration</description>
        <param description="An array of configuration options for this module. It merges them with the hard coded default values configured in the overloaded module." type="array" variable="$config"/>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </method>
    <method name="getConfig" start="79" end="84" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="getConfig">Gets a configuration value</description>
        <param description="The configuration key" type="string" variable="$key"/>
        <return description="The value of the specified config key. Returns false if doesn't exists." type="mixed"/>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
    </method>
    <method name="setConfig" start="94" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="setConfig">Sets a configuration value</description>
        <param description="The configuration key, or a hash array of keys =&gt; values if multiple keys are to be changed" type="string" variable="$key"/>
        <param description="The configuration value" type="string" variable="$value"/>
      </docblock>
      <parameter name="keyOrKeys" byreference="false" type="{unknown}"/>
      <parameter name="value" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="loadDependencies" start="110" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="loadDependencies">Loads the dependent modules required by this one</description>
        <return description="Whether the dependent modules were loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="mapActions" start="131" end="132" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="mapActions">Maps the Actions to which this module must respond. Should be overloaded by a module class when needed. Intended to contain calls to self::mapAction()</description>
      </docblock>
    </method>
    <method name="addCssAndJavascript" start="139" end="140" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="addCssAndJavascript">Adds the Css/Javascript files/code needed by this module to the proper set on Css and Javascript modules.</description>
      </docblock>
    </method>
    <method name="init" start="151" end="158" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="init">Initializes the module, intended to be overloaded.
Called when the module is loaded.
Contains any specific initializations for the module, and any required loading of modules and classes dependencies.</description>
        <return description="Whether the module has been loaded ok" type="boolean"/>
      </docblock>
    </method>
    <method name="arrayMergeRecursiveDistinct" start="172" end="182" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="arrayMergeRecursiveDistinct">Joins two arrays like PHP function array_merge_recursive_distinct does, but instead it does not adds elements to arrays when keys match: it replaces them.</description>
        <author value="Daniel &lt;daniel (at) danielsmedegaardbuus (dot) dk&gt;"/>
        <author value="Gabriel Sobrinho &lt;gabriel (dot) sobrinho (at) gmail (dot) com&gt;"/>
        <param description="The first array to merge" type="array" variable="$array1"/>
        <param description="The second array to merge" type="array" variable="$array2"/>
        <return description="The merged array" type="array"/>
      </docblock>
      <parameter name="array1" byreference="true" type="array"/>
      <parameter name="array2" byreference="true" type="array"/>
    </method>
  </parent>
</class>
