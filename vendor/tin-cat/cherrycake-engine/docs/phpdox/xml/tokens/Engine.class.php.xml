<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/var/www/lib/cherrycake" file="Engine.class.php" realpath="/var/www/lib/cherrycake/Engine.class.php" size="7872" time="2018-09-09T09:36:04+00:00" unixtime="1536485764" sha1="f3a0ca4eb93f7195ab8f37d22b2e4a30735bbef9" relative="Engine.class.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * Engine</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * @package Cherrycake</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="8"/>
  <line no="9">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Cherrycake</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="10"/>
  <line no="11">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * Engine</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> * The main class that loads modules and configurations, and the entry point of the application.</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * Cherrycake uses global variables for configuring modules and global configuration, be sure to set "register_globals" to "off" in php.ini to avoid security issues.</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * @package Cherrycake</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * @category Main</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="20">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Engine</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="22">
    <token name="T_DOC_COMMENT">	 * @var string $appNamespace Holds the namespace for the specific App, it is set in the Init method</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$appNamespace</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT">	 * @var array $loadedModules Stores the names of all included modules</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$loadedModules</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="30"/>
  <line no="31">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">	 * init</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">	 * Initializes the engine</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">	 * Setup keys:</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">	 * * namespace: Specifies the App namespace</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">	 * * baseCherrycakeModules: An ordered array of the base Cherrycake module names that has to be always loaded on application start. These must include an "actions" modules that will later determine the action to take based on the received query, thus loading the additional required modules to do so.</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">	 * * additionalAppConfigFiles: An ordered array of any additional App config files to load that are found under the App config directory</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">	 * @param array $setup The initial engine configuration information.</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">	 * @return boolean Whether all the modules have been loaded ok</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$setup</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Cherrycake</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">isUnderMaintenance</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">header</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"HTTP/1.1 503 Service Temporarily Unavailable"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">			</token>
    <token name="T_ECHO">echo</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">file_get_contents</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"errors/maintenance.html"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="49">
    <token name="T_WHITESPACE">			</token>
    <token name="T_EXIT">die</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="50">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">		</token>
    <token name="T_STRING">date_default_timezone_set</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">TIMEZONENAME</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="53"/>
  <line no="54">
    <token name="T_WHITESPACE">		</token>
    <token name="T_REQUIRE">require</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">LIB_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/module.class.php"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="55"/>
  <line no="56">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">appNamespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$setup</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"namespace"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="57"/>
  <line no="58">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$setup</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"additionalAppConfigFiles"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">			</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$setup</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"additionalAppConfigFiles"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$additionalAppConfigFile</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">				</token>
    <token name="T_REQUIRE">require</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"config/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$additionalAppConfigFile</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="61"/>
  <line no="62">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$setup</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"baseCherrycakeModules"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">			</token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$setup</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"baseCherrycakeModules"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$module</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="64">
    <token name="T_WHITESPACE">				</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loadCherrycakeModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$module</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="65">
    <token name="T_WHITESPACE">					</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="66"/>
  <line no="67">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="68">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="69"/>
  <line no="70">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">	 * getAppNamespace</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">	 * @return string The namespace used by the App</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAppNamespace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">appNamespace</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="78"/>
  <line no="79">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">	 * loadCherrycakeModule</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">	 * Specific method to load a Cherrycake module. Cherrycake modules are classes extending the module class that provide engine-specific functionalities.</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">	 * @param string $moduleName The name of the module to load</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">	 * @return boolean Whether the module has been loaded ok</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadCherrycakeModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loadModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">LIB_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/modules"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">CONFIG_DIR</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_C">__NAMESPACE__</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="91"/>
  <line no="92">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">	 * loadAppModule</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">	 * Specific method to load an application-specific module. App modules are classes extending the module class that provide app-specific functionalities.</token>
  </line>
  <line no="96">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="97">
    <token name="T_DOC_COMMENT">	 * @param string $moduleName The name of the module to load</token>
  </line>
  <line no="98">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT">	 * @return boolean Whether the module has been loaded ok</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="101">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadAppModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="102">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loadModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">APP_MODULES_DIR</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">CONFIG_DIR</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">appNamespace</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="104"/>
  <line no="105">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">	 * loadModule</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="108">
    <token name="T_DOC_COMMENT">	 * Generic method to load a module. Modules are classes extending the module class providing specific functionalities in a modular-type framework. Module can have its own configuration file.</token>
  </line>
  <line no="109">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="110">
    <token name="T_DOC_COMMENT">	 * @param string $modulesDirectory Directory where modules are stored</token>
  </line>
  <line no="111">
    <token name="T_DOC_COMMENT">	 * @param string $configDirectory Directory where module configuration files are stored with the syntax [module name].config.php</token>
  </line>
  <line no="112">
    <token name="T_DOC_COMMENT">	 * @param string $moduleName The name of the module to load</token>
  </line>
  <line no="113">
    <token name="T_DOC_COMMENT">	 * @param string $namespace The namespace of the module</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">	 * @return boolean Whether the module has been loaded and initted ok</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$modulesDirectory</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$configDirectory</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="118">
    <token name="T_WHITESPACE">		</token>
    <token name="T_COMMENT">// Avoids a module to be loaded more than once</token>
  </line>
  <line no="119">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loadedModules</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loadedModules</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="121"/>
  <line no="122">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">loadedModules</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="123"/>
  <line no="124">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">includeModuleClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$modulesDirectory</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE">		</token>
  </line>
  <line no="125"/>
  <line no="126">
    <token name="T_WHITESPACE">		</token>
    <token name="T_EVAL">eval</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\$this-&gt;"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">" = new \\"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\\Modules\\"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"();"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="127"/>
  <line no="128">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">init</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="129">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">end</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="130">
    <token name="T_WHITESPACE">			</token>
    <token name="T_EXIT">die</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="132"/>
  <line no="133">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="134">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="135"/>
  <line no="136">
    <token name="T_WHITESPACE">	</token>
    <token name="T_COMMENT">/*</token>
  </line>
  <line no="137">
    <token name="T_COMMENT">	 * includeModuleClass</token>
  </line>
  <line no="138">
    <token name="T_COMMENT">	 *</token>
  </line>
  <line no="139">
    <token name="T_COMMENT">	 * Generic method to include a module class</token>
  </line>
  <line no="140">
    <token name="T_COMMENT">	 *</token>
  </line>
  <line no="141">
    <token name="T_COMMENT">	 * @param string $modulesDirectory Directory where modules are stored</token>
  </line>
  <line no="142">
    <token name="T_COMMENT">	 * @param string $moduleName The name of the module whose class must be included</token>
  </line>
  <line no="143">
    <token name="T_COMMENT">	 */</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">includeModuleClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$modulesDirectory</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">		</token>
    <token name="T_INCLUDE_ONCE">include_once</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$modulesDirectory</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">".class.php"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="147"/>
  <line no="148">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="149">
    <token name="T_DOC_COMMENT">	 * loadCherrycakeClass</token>
  </line>
  <line no="150">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="151">
    <token name="T_DOC_COMMENT">	 * Loads a Cherrycake-specific class. Cherrycake classes are any other classes that are not modules, nor related to any Cherrycake module.</token>
  </line>
  <line no="152">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="153">
    <token name="T_DOC_COMMENT">	 * @param $className The name of the class to load, must be stored in LIB_DIR/[class name].class.php</token>
  </line>
  <line no="154">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadCherrycakeClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">		</token>
    <token name="T_INCLUDE_ONCE">include_once</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">LIB_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">".class.php"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="158"/>
  <line no="159">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="160">
    <token name="T_DOC_COMMENT">	 * loadCherrycakeModuleClass</token>
  </line>
  <line no="161">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="162">
    <token name="T_DOC_COMMENT">	 * Loads a cherrycake-specific class. Cherrycake module classes are any other classes that are not modules, but related to a Cherrycake module.</token>
  </line>
  <line no="163">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="164">
    <token name="T_DOC_COMMENT">	 * @param $moduleName The name of the module to which the class belongs</token>
  </line>
  <line no="165">
    <token name="T_DOC_COMMENT">	 * @param $className The name of the class</token>
  </line>
  <line no="166">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="167">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadCherrycakeModuleClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">		</token>
    <token name="T_INCLUDE_ONCE">include_once</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">LIB_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/modules/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">".class.php"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="170"/>
  <line no="171">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="172">
    <token name="T_DOC_COMMENT">	 * loadAppClass</token>
  </line>
  <line no="173">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="174">
    <token name="T_DOC_COMMENT">	 * Loads an app-specific class. App classes are any other classes that are not directly related to a module.</token>
  </line>
  <line no="175">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="176">
    <token name="T_DOC_COMMENT">	 * @param string $className The name of the class to load, must be stored in APP_CLASSES_DIR/[class name].class.php</token>
  </line>
  <line no="177">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="178">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadAppClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="179">
    <token name="T_WHITESPACE">		</token>
    <token name="T_INCLUDE_ONCE">include_once</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">APP_CLASSES_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">".class.php"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="181"/>
  <line no="182">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="183">
    <token name="T_DOC_COMMENT">	 * loadAppModuleClass</token>
  </line>
  <line no="184">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="185">
    <token name="T_DOC_COMMENT">	 * Loads an app-module specific class. App module classes are classes that do not extend the module class but provide functionalities related to a module.</token>
  </line>
  <line no="186">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="187">
    <token name="T_DOC_COMMENT">	 * @param string $moduleName The name of the module to which the class belongs</token>
  </line>
  <line no="188">
    <token name="T_DOC_COMMENT">	 * @param string $className The name of the class</token>
  </line>
  <line no="189">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="190">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">loadAppModuleClass</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="191">
    <token name="T_WHITESPACE">		</token>
    <token name="T_INCLUDE_ONCE">include_once</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">APP_MODULES_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$moduleName</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">".class.php"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="192">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="193"/>
  <line no="194">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="195">
    <token name="T_DOC_COMMENT">	 * run</token>
  </line>
  <line no="196">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="197">
    <token name="T_DOC_COMMENT">	 * Starts the application by invoking Actions-&gt;Run</token>
  </line>
  <line no="198">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="199">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="200">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Actions</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">run</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="202"/>
  <line no="203">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="204">
    <token name="T_DOC_COMMENT">	 * end</token>
  </line>
  <line no="205">
    <token name="T_DOC_COMMENT">	 *</token>
  </line>
  <line no="206">
    <token name="T_DOC_COMMENT">	 * Ends the application by dumping the Output buffer to the client</token>
  </line>
  <line no="207">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="208">
    <token name="T_WHITESPACE">	</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">end</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="209">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">Output</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">sendResponse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="210">
    <token name="T_WHITESPACE">		</token>
    <token name="T_EXIT">die</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="212">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="213"/>
  <line no="214">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="215">
    <token name="T_DOC_COMMENT"> * Defines an autoloader for requested classes, to allow the automatic inclusion of class files when they're needed. It distinguishes from Cherrycake classes and App classes by checking the namespace</token>
  </line>
  <line no="216">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="217">
    <token name="T_STRING">spl_autoload_register</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="218">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strstr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\\"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="219"/>
  <line no="220">
    <token name="T_WHITESPACE">	</token>
    <token name="T_COMMENT">// If autoload for Predis namespace is requested, don't do it. Exception for performance only.</token>
  </line>
  <line no="221">
    <token name="T_WHITESPACE">	</token>
    <token name="T_COMMENT">// This causes the "Predis" namespace name to be forbidden to use when creating a Cherrycake app.</token>
  </line>
  <line no="222">
    <token name="T_WHITESPACE">	</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Predis"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="223">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="224"/>
  <line no="225">
    <token name="T_WHITESPACE">	</token>
    <token name="T_VARIABLE">$fileName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\\"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strstr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$className</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\\"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">".class.php"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="226"/>
  <line no="227">
    <token name="T_WHITESPACE">	</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_EQUAL">==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Cherrycake"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="228">
    <token name="T_WHITESPACE">		</token>
    <token name="T_INCLUDE">include</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">LIB_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/classes/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$fileName</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="229">
    <token name="T_WHITESPACE">	</token>
    <token name="T_ELSE">else</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">	</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">file_exists</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">APP_CLASSES_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$fileName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">		</token>
    <token name="T_INCLUDE">include</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">APP_CLASSES_DIR</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"/"</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$fileName</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="232">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="233"/>
  <line no="234">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="235">
    <token name="T_DOC_COMMENT"> * @return bool Whether the app is currently under maintenance or not. Takes also into account the exception IPs</token>
  </line>
  <line no="236">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="237">
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isUnderMaintenance</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="238">
    <token name="T_WHITESPACE">	</token>
    <token name="T_GLOBAL">global</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$underMaintenanceExceptionIps</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="239">
    <token name="T_WHITESPACE">	</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">IS_UNDER_MAINTENANCE</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$_SERVER</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"REMOTE_ADDR"</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$underMaintenanceExceptionIps</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="240">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
</source>
